;Macros

;interrupts
.macro interrupt_enable
	setb EA
.endm

.macro interrupt_disable
	clr EA
.endm

;ext_int
.macro ext_int_enable
	orl TCON, #0x05 	;IT1|IT0 - falling edge only
	orl IE, #0x05	;EX1 | EX0
	orl AUXR2, #0x30	;EX3 | EX2
.endm

.macro ext_int_disable
	anl AUXR2, #~0x30	;EX3 | EX2
	anl IE, #~0x05	;EX1 | EX0
.endm

.macro clear_ext_int_flags
	anl TCON, #~0x0a
.endm

;t0_int
.macro t0_int_enable
	setb ET0
.endm

.macro t0_int_disable
	clr ET0
.endm

.macro t0_set_count, count
	mov TL0, #(0xffff-count)&0xff
	mov TH0, #((0xffff-count)>>8)&0xff
.endm


;t2_int
.macro t2_int_enable
	orl IE2, #0x04
.endm

.macro t2_int_disable
	anl IE2, #~0x04
.endm

.macro t2_set_count, count
	mov T2L, #(0x10000-count)&0xff
	mov T2H, #((0x10000-count)>>8)&0xff
.endm

;idle mode
.macro idl_mode
	orl PCON, #0x01 	;IDL
    nop
    nop
    nop
.endm

;idle mode
.macro pd_mode
	orl PCON, #0x02 	;PD
    nop
    nop
    nop
.endm


;Functions

.macro ext_int_get_input, pd_flag, ?rand
ext_int_get_input_beginning'rand: 
	clear_ext_int_flags 	;Necessary as IE0/1 will be set *regardless* of any SFR value.
	ext_int_enable
	interrupt_enable
	.if pd_flag = 1
        pd_mode     ;PD = power down
	.else
		idl_mode 	;IDL
	.endif
	interrupt_disable
	lcall get_pwm_led
	release_button
.endm

.macro release_button, ?rand
	release'rand:
        read_io
	    anl a, V_PWM_LED
		jz release'rand
	lcall pwm_led
.endm

.macro read_io
		mov a, P3
        .ifdef B_8G1K08A
            anl a, #0x0f
            mov r4, a
            mov a, P5
            anl a, #0xf0
            orl a, r4
        .endif
    .endm

;Byte to bit
;.macro bit_addr, byte_addr, bit_num
	;.error byte_addr & 0x20 != 0x20 
	
